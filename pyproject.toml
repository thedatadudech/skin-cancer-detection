[project]
name = "skin-cancer-detection"
version = "1.0.0"
description = "Advanced deep learning-powered skin cancer detection system using PyTorch and Streamlit"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "Abdullah Isa Markus", email = "abdullahisa.markus@gmail.com" }
]
keywords = ["deep-learning", "medical-imaging", "skin-cancer", "pytorch", "streamlit", "computer-vision"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]

dependencies = [
    # Core ML libraries
    "torch>=2.5.1",
    "torchvision>=0.20.1",
    "tensorflow>=2.14.0",
    
    # Data processing
    "numpy>=2.2.2",
    "pandas>=2.2.3",
    "scikit-learn>=1.6.1",
    "pillow==10.0.0",
    
    # Web interface
    "streamlit>=1.41.1",
    "flask>=3.1.0",
    
    # Utilities
    "tqdm>=4.67.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]

gpu = [
    "torch>=2.5.1+cu118",
    "torchvision>=0.20.1+cu118",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/thedatadudech/skin-cancer-detection"
Repository = "https://github.com/thedatadudech/skin-cancer-detection"
Documentation = "https://github.com/thedatadudech/skin-cancer-detection#readme"
"Bug Tracker" = "https://github.com/thedatadudech/skin-cancer-detection/issues"

[project.scripts]
skin-cancer-app = "app:main"
skin-cancer-train = "train:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# PyTorch CPU-specific configuration for Linux
[[tool.uv.index]]
explicit = true
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"

[tool.uv.sources]
torch = [{ index = "pytorch-cpu", marker = "platform_system == 'Linux'" }]
torchvision = [{ index = "pytorch-cpu", marker = "platform_system == 'Linux'" }]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
